#upstream django {
#  server unix:///opt/oafe/cuckoo/uwsgi/cuckoo-webui.sock;
#}
#
#upstream api {
#  server unix:///opt/oafe/cuckoo/uwsgi/cuckoo-api.sock;
#}
#
#**This will force all traffic to https**#
#server {
#  listen *:80 ;
#  listen [::]:80 ;

  #ssl configuration
#  listen 443 ssl default_server;
#  listen [::]:443 ssl default_server;

# ssl on;
#  ssl_certificate       /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
#  ssl_certificate_key   /etc/nginx/ssl/nginx.key;  ## Replace with your own key
#  server_name _; ## Replace with your domain name
#  access_log            /var/log/nginx/index.access.log;
#  error_log             /var/log/nginx/index.error.log;
  #return 301 http://$host$request_uri;

#  root /var/www/html/;
#  index index.nginx-debian.html;

#  location / {
#  auth_basic "Restricted";
#  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
#  try_files $uri $uri/ =404;
#  }

#}

#**IVRE web interface, this is static web content so we serve it at port 32500**#
server {
  listen *:32500;
  ssl on;
  ssl_certificate       /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key   /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/ivre.access.log;
  error_log             /var/log/nginx/ivre.error.log;

  root /usr/local/share/ivre/web/static/;
  index index.html index.htm index.php;

  location / {
  #First attempt to serve request as file, then
  # as directory, then fall back to displaying 404.
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  try_files $uri $uri/ =404;
  }

  location ~ ^/cgi-bin/(scanjson|scanupload|flowjson|jsconfig)\.py$ {
  root /usr/local/share/ivre/web/;
  fastcgi_pass unix:/var/run/fcgiwrap.socket;
  fastcgi_param REMOTE_USER $remote_user;
  include fastcgi.conf;
  }
}

#** Cukoo Django web interface, served on port 8501 for external purposes. As of 10/14/16 this content is not being served correctly **
#server {
#  listen *:8501;
#  charset utf-8;
#  ssl on;
#  ssl_certificate       /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
#  ssl_certificate_key   /etc/nginx/ssl/nginx.key;  ## Replace with your own key
#  server_name           oafe.local; ## Replace with your domain name
#  access_log            /var/log/nginx/cukooDjango.access.log;
#  error_log             /var/log/nginx/cukooDjango.error.log;
#
#  client_max_body_size 200M;
#  location /static {
#  alias /opt/oafe/cuckoo/web/static;
#  }
#
#  location / {
#  auth_basic "Restricted";
#  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
#  uwsgi_pass django;
#  uwsgi_read_timeout 300;
#  include /etc/nginx/uwsgi_params;
#  }
#}
#
#** Cuckoo REST API service **#
#server {
#  listen *:8504;
#  server_name _;
#  charset utf-8;
#
#  location / {
#  uwsgi_pass api;
#  uwsgi_read_timeout 180;
#  include /etc/nginx/uwsgi_params;
#  }
#}
#
#** Testing config, but this appears to be for kibana which is on port 8502 external and 5601 internl **#
server {
  listen                *:8502 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/kibana.access.log;
  error_log  /var/log/nginx/kibana.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:5601/; ## Replace with your kibana instance
  }
}

#** service for viper api being served at port 8513 internal and 8503 for external. As of 10/14/16 this content is not working **#
server {
  listen                *:8503 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/viperapi.access.log;
  error_log  /var/log/nginx/viperapi.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:8513/; ## Replace with your Viper API instance
  }
}

#** viperweb interface, 8514 is the local port, 8505 is for external access. As of 10/14/16 this content is not working **#
server {
  listen                *:8505 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/viperweb.access.log;
  error_log  /var/log/nginx/viperweb.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:8514/; ## Replace with your Viper Web Interface instance
  }
}

#** this configuration is for maltrail, listening on port 8338 internal and 8506 externally. **#
server {
  listen                *:8506 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/maltrail.access.log;
  error_log  /var/log/nginx/maltrail.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:8338; ## Replace with your Maltrail instance
  }
}

#**this configuration is for kibi, listening on port 5606 for local and 8507 external access**#
server {
  listen                *:8507 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/kibi.access.log;
  error_log  /var/log/nginx/kibi.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:5606; ## Replace with your Kibi instance
  }
}

#**NTOPng web interface config listening on port 3000 internally and 8509 externally **#
server {
  listen                *:8509 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/ntopng.access.log;
  error_log  /var/log/nginx/ntopng.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:3000; ## Replace with your NTOPng instance
  }
}

#**Moloch web interface config listening on port 8005 internally and 8510 externally **#
server {
  listen                *:8510 ;
  ssl on;
  ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
  server_name           oafe.local; ## Replace with your domain name
  access_log            /var/log/nginx/moloch.access.log;
  error_log  /var/log/nginx/moloch.error.log;

  location / {
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
  proxy_pass http://127.0.0.1:3000; ## Replace with your moloch instance
  }
}

################################################################################################################################
##**the below code is optional and may not be needed in the future. We are going to save it if its needed for later purposes**##
################################################################################################################################
#server {
#listen                *:8501 ;
#ssl on;
#ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificate
#ssl_certificate_key /etc/nginx/ssl/nginx.key;  ## Replace with your own key
#server_name           oafe.local; ## Replace with your domain name
#access_log            /var/log/nginx/cuckooweb.access.log;
#error_log  /var/log/nginx/cuckooweb.error.log;
#
#location / {
#auth_basic "Restricted";
#auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
#proxy_pass http://127.0.0.1:8511; ## Replace with your Cuckoo Web Interface instance
#}
#}

#server {
#listen                *:8504 ;
#ssl on;
#ssl_certificate /etc/nginx/ssl/nginx.crt;  ## Replace with your own certificatekey
#server_name           oafe.local; ## Replace with your domain name
#access_log            /var/log/nginx/cuckooapi.access.log;
#error_log  /var/log/nginx/cuckooapi.error.log;
#
#location / {
#auth_basic "Restricted";
#auth_basic_user_file /etc/nginx/conf.d/oafe.htpasswd;
#proxy_pass http://127.0.0.1:8510/; ## Replace with your Cuckoo API instance
#}
#}
#server {
#listen      80;
#server_name oafe.local;   ## Replace with your domain name
#return 301 http://$server_name$request_uri;
#}
